name: "Build and Cache NixOS/HM (no all-hosts)"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-cache:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            # Needed if any inputs are private GitHub repos:
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Configure Cachix
        uses: cachix/cachix-action@v15
        with:
          name: nixosconfig
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      # Enumerate flake outputs with `nix flake show --json` (pure), parse via jq from nixpkgs,
      # then build and push each closure to Cachix. Fails loudly if neither set exists.
      - name: Build + push nixosConfigurations and homeConfigurations
        shell: bash
        run: |
          set -euo pipefail
          nix shell --quiet nixpkgs#jq --command bash -lc '
            set -euo pipefail

            # Get keys safely (keys[]? avoids errors if the object is missing)
            readarray -t HOSTS < <(nix flake show --json | jq -r ".nixosConfigurations | keys[]? // empty")
            readarray -t HOMES < <(nix flake show --json | jq -r ".homeConfigurations | keys[]? // empty")

            if [ "${#HOSTS[@]}" -eq 0 ] && [ "${#HOMES[@]}" -eq 0 ]; then
              echo "Error: flake exports neither nixosConfigurations nor homeConfigurations."
              exit 1
            fi

            if [ "${#HOSTS[@]}" -gt 0 ]; then
              echo "Discovered nixosConfigurations:"
              printf "  - %s\n" "${HOSTS[@]}"
            else
              echo "No nixosConfigurations exported by flake."
            fi

            if [ "${#HOMES[@]}" -gt 0 ]; then
              echo "Discovered homeConfigurations:"
              printf "  - %s\n" "${HOMES[@]}"
            else
              echo "No homeConfigurations exported by flake."
            fi

            for h in "${HOSTS[@]}"; do
              echo "::group::nixosConfigurations.${h}"
              out="$(nix build --accept-flake-config --no-link --print-out-paths ".#nixosConfigurations.${h}.config.system.build.toplevel")"
              nix copy --to "cachix://nixosconfig" "$out"
              echo "::endgroup::"
            done

            for u in "${HOMES[@]}"; do
              echo "::group::homeConfigurations.${u}"
              out="$(nix build --accept-flake-config --no-link --print-out-paths ".#homeConfigurations.${u}.activationPackage")"
              nix copy --to "cachix://nixosconfig" "$out"
              echo "::endgroup::"
            done
          '
