version: "3.8"

services:
  # ---------------------------------------------------------------
  # Network holder for the core Jellyfin services
  # ---------------------------------------------------------------
  jellyfin-network-holder:
    image: k8s.gcr.io/pause:3.9
    container_name: jellyfin_network_holder
    ports:
      - "8096:8096" # Jellyfin HTTP
      - "8920:8920" # Jellyfin HTTPS (optional)
      - "7359:7359/udp" # Discovery (optional)
      - "1900:1900/udp" # DLNA (optional)
      - "3468:3468" # Autoscan
      - "8080:8080" # Watchstate WebUI
      # NOTE: Port 3000 for Jellystat has been moved
    restart: unless-stopped
    networks:
      - jellyfin-net

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=99
      - PGID=100
      - UMASK=0000
      - TZ=Australia/Perth
      - JELLYFIN_PublishedServerUrl=192.168.1.33
    volumes:
      - /mnt/docker/jellyfin:/config
      - "/mnt/data/Media/TV Shows/:/data/tvshows:ro"
      - /mnt/data/Media/Movies/:/data/movies:ro
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
    network_mode: "service:jellyfin-network-holder"
    depends_on:
      - jellyfin-network-holder

  # ... (tailscale, caddy, autoscan, watchstate services remain unchanged) ...
  tailscale:
    image: tailscale/tailscale:latest
    container_name: jellyfin-tailscale-sidecar
    network_mode: "service:jellyfin-network-holder"
    # ... (rest of tailscale config) ...
    volumes:
      - /mnt/docker/jellyfin/tailscale:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - TS_HOSTNAME=jellyfin
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_ACCEPT_DNS=false
    restart: unless-stopped
    depends_on:
      - jellyfin-network-holder

  caddy:
    build:
      context: .
      dockerfile: ../tailscale/caddy/Dockerfile
    container_name: jellyfin-caddy
    network_mode: "service:jellyfin-network-holder"
    # ... (rest of caddy config) ...
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    volumes:
      - /mnt/docker/jellyfin/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /mnt/docker/jellyfin/caddy_data:/data
      - /mnt/docker/jellyfin/caddy_config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    depends_on:
      - jellyfin-network-holder
    stdin_open: true
    tty: true

  autoscan:
    image: ghcr.io/niniyas/autoscan:latest
    container_name: jellyfin-autoscan
    network_mode: "service:jellyfin-network-holder"
    # ... (rest of autoscan config) ...
    volumes:
      - /mnt/docker/jellyfin/autoscan:/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PUID=99
      - PGID=100
      - UMASK=0000
      - TZ=Australia/Perth
    restart: unless-stopped
    depends_on:
      - jellyfin-network-holder

  watchstate:
    image: ghcr.io/arabcoders/watchstate:latest
    container_name: watchstate
    user: "99:100"
    network_mode: "service:jellyfin-network-holder"
    # ... (rest of watchstate config) ...
    environment:
      - TZ=Australia/Perth
    volumes:
      - /mnt/docker/jellyfin/watchstate:/config
    restart: unless-stopped
    depends_on:
      - jellyfin-network-holder

  # ---------------------------------------------------------------
  # Jellystat Services (Corrected Configuration)
  # ---------------------------------------------------------------
  jellystat-db:
    image: "postgres:15.2"
    container_name: jellystat-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=jellystat
      - POSTGRES_PASSWORD=${JELLYSTAT_DB_PASSWORD}
    volumes:
      - "/mnt/docker/jellystat/postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jellystat"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - jellyfin-net

  jellystat:
    image: "cyfershepard/jellystat:latest"
    container_name: jellystat
    restart: unless-stopped
    # --- KEY CHANGE: Removed network_mode and added ports directly ---
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USER=jellystat
      - POSTGRES_PASSWORD=${JELLYSTAT_DB_PASSWORD}
      # Connect via service name (Docker DNS)
      - POSTGRES_IP=jellystat-db
      - POSTGRES_PORT=5432
      - JWT_SECRET=${JELLYSTAT_JWT_SECRET}
      - TZ=Australia/Perth
    volumes:
      - "/mnt/docker/jellystat/backup-data:/app/backend/backup-data"
    depends_on:
      jellystat-db:
        condition: service_healthy
    networks:
      - jellyfin-net

# Define the custom network used by the services
networks:
  jellyfin-net:
    driver: bridge
